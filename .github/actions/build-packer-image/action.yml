name: Build Packer Image
description: 'Build PSPi image'
inputs:
  build:
    description: 'Comma separated list of images to build'
    required: true
  version:
    description: 'gitversion version output'
    required: true
  createRelease:
    description: 'Create a release'
    default: 'false'

runs:
  using: "composite"
  steps:
    # Download driver artifacts
    - name: Download Drivers
      uses: actions/download-artifact@v4
      with:
        path: rpi/drivers/bin
        merge-multiple: true
        name: drivers

    # Install dependencies for packer
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install fdisk gdisk qemu-system qemu-user-static libarchive-tools tar parted qemu-utils binfmt-support pigz -y
      shell: bash

    # Build images
    - name: Build images
      run: |
        sudo packer init ./
        sudo packer build -only ${{ inputs.build }}.* -var pspi_version=v${{ inputs.version }} "$GITHUB_WORKSPACE/packer/"
      working-directory: packer
      shell: bash

    # Shrink images
    - name: Shrink images
      run: |
        wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
        chmod +x pishrink.sh
        for i in $(ls *.img)
        do
          sudo ./pishrink.sh -v -z -a "$i"
        done
      working-directory: packer
      shell: bash

    # Split image using 7zip if over 2GB
    - name: Split large images
      run: |
        for i in $(ls *.img.gz)
        do
          if [ $(stat -c %s "$i") -gt $((2000*1024*1024)) ]; then
            7z a "$i.7z" "$i" -v1500m
            rm "$i"
          fi
        done
        ls -lh *.img.gz *.7z.*
      working-directory: packer
      shell: bash

    # Generate sha256 filehash of image files
    - name: Generate sha256 filehash
      run: |
        for i in $(ls *.img.gz *.7z.* 2>/dev/null)
        do
          sha256sum "$i" | awk '{print $1}' > "$i.sha256"
        done
      working-directory: packer
      shell: bash

    # Update github release
    - name: Update Release
      if: github.ref == 'refs/heads/main' || inputs.createRelease == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ inputs.version }}
        draft: true
        fail_on_unmatched_files: true
        files: |
          packer/*.img.gz
          packer/*.img.gz.sha256
          packer/*.7z.*

    # Upload artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.build }}
        retention-days: 7
        path: |
          packer/*.img.gz
          packer/*.img.gz.sha256
          packer/*.7z.*
